version: 2.1

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniforge3
    name: setup_miniforge3
    command: |
       if [[ $OS == 'osx-64' ]]; then
          curl -L https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-x86_64.sh -o miniforge3.sh
       else
          curl -L https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -o miniforge3.sh
       fi
       bash miniforge3.sh -b -p $WORKDIR/miniforge3
      
  - &create_mamba_env
    name: create_mamba_env
    command: |
       export PATH=$WORKDIR/miniforge3/bin:$PATH
       source $WORKDIR/miniforge3/etc/profile.d/conda.sh
       eval "$(mamba shell hook --shell bash)"
       mamba create -y -n py3 -c pcmdi/label/nightly -c conda-forge cmor=3.10.0 python=3.12

  - &setup_cmor
    name: setup_cmor
    command: |
       export PATH=$WORKDIR/miniforge3/bin:$PATH
       source $WORKDIR/miniforge3/etc/profile.d/conda.sh
       eval "$(mamba shell hook --shell bash)"
       source activate py3
       echo "ACTIVATE RETURN CODE $?"
       git clone https://github.com/PCMDI/cmor
       cd cmor
       git checkout 3.7.2
       # update cmip6-cmor-tables submodule with the current branch
       git submodule init
       git submodule update
       cd cmip6-cmor-tables
       git checkout $CIRCLE_BRANCH
       exit 0

  - &run_prepare_tests
    name: run_prepare_tests
    command: |
       export PATH=$WORKDIR/miniforge3/bin:$PATH
       source $WORKDIR/miniforge3/etc/profile.d/conda.sh
       eval "$(mamba shell hook --shell bash)"
       source activate py3
       cp Tables/* cmor/Tables
       cd cmor
       export PYTHONPATH=Test
       for file in `ls -1 Test/test_python_CMIP6_CV*.py`; do echo $file; python $file; mystatus=$?; if [[ "$mystatus" != "0" ]]; then return ${mystatus}; fi; done

  - &update_cv_json
    name: update_cv_json
    command: |
      export PATH=$WORKDIR/miniforge3/bin:$PATH
      source $WORKDIR/miniforge3/etc/profile.d/conda.sh
      eval "$(mamba shell hook --shell bash)"
      git config user.email "$GITHUB_EMAIL"
      git config user.name "$GITHUB_USERNAME"
      git pull origin main
      git submodule init
      git submodule update
      git submodule foreach git pull origin main
      python scripts/createCMIP6CV.py
      mv CMIP6_CV.json  Tables
      if [[ $(git status --porcelain -uno) ]]; then
        msg="cron: update CMIP6_CV -- "`date +%Y-%m-%dT%H:%M`
        echo $msg
        git commit -am "$msg"
        git push --set-upstream origin cron_test
      else
        echo "No changes to commit."
      fi


jobs:
  macos_cmip6:
    macos:
      xcode: "15.4.0"
    resource_class: macos.m1.medium.gen1
    environment:
      WORKDIR: "workspace/test_macos_cmor"
      UVCDAT_ANONYMOUS_LOG: "False"
      OS: "osx-64arm"
    steps:
      - checkout
      - run: *setup_miniforge3
      - run: *create_mamba_env
      - run: *setup_cmor
      - run: *run_prepare_tests

  linux_cmip6:
    machine:
      image: ubuntu-2204:2024.01.2
    environment:
      WORKDIR: "workspace/test_linux_cmor"
      UVCDAT_ANONYMOUS_LOG: "False"
      OS: "linux-64"
    steps:
      - checkout
      - run: *setup_miniforge3
      - run: *create_mamba_env
      - run: *setup_cmor
      - run: *run_prepare_tests

  cmip6_cv_update:
    machine:
      image: ubuntu-2204:2024.01.2
    environment:
      WORKDIR: "workspace/cv_update"
      UVCDAT_ANONYMOUS_LOG: "False"
      OS: "linux-64"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "$GITHUB_SSH_KEY_FINGERPRINT"
      - checkout
      - run: *setup_miniforge3
      - run: *update_cv_json

workflows:
  version: 2
  nightly:
    jobs:
      - macos_cmip6
      - linux_cmip6
  cv_update:
    triggers:
      - schedule:
          cron: "0 0,8 * * *"
          filters:
            branches:
              only:
                - cron_test
    jobs:
      - cmip6_cv_update
